;; Auto-generated. Do not edit!


(when (boundp 'kxr_controller::AdjustAngleVectorGoal)
  (if (not (find-package "KXR_CONTROLLER"))
    (make-package "KXR_CONTROLLER"))
  (shadow 'AdjustAngleVectorGoal (find-package "KXR_CONTROLLER")))
(unless (find-package "KXR_CONTROLLER::ADJUSTANGLEVECTORGOAL")
  (make-package "KXR_CONTROLLER::ADJUSTANGLEVECTORGOAL"))

(in-package "ROS")
;;//! \htmlinclude AdjustAngleVectorGoal.msg.html


(defclass kxr_controller::AdjustAngleVectorGoal
  :super ros::object
  :slots (_joint_names _error_threshold ))

(defmethod kxr_controller::AdjustAngleVectorGoal
  (:init
   (&key
    ((:joint_names __joint_names) (let (r) (dotimes (i 0) (push "" r)) r))
    ((:error_threshold __error_threshold) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _joint_names __joint_names)
   (setq _error_threshold __error_threshold)
   self)
  (:joint_names
   (&optional __joint_names)
   (if __joint_names (setq _joint_names __joint_names)) _joint_names)
  (:error_threshold
   (&optional __error_threshold)
   (if __error_threshold (setq _error_threshold __error_threshold)) _error_threshold)
  (:serialization-length
   ()
   (+
    ;; string[] _joint_names
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _joint_names)) 4
    ;; float32[] _error_threshold
    (* 4    (length _error_threshold)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string[] _joint_names
     (write-long (length _joint_names) s)
     (dolist (elem _joint_names)
       (write-long (length elem) s) (princ elem s)
       )
     ;; float32[] _error_threshold
     (write-long (length _error_threshold) s)
     (dotimes (i (length _error_threshold))
       (sys::poke (elt _error_threshold i) (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string[] _joint_names
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _joint_names (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _joint_names i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;; float32[] _error_threshold
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _error_threshold (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _error_threshold i) (sys::peek buf ptr- :float)) (incf ptr- 4)
     ))
   ;;
   self)
  )

(setf (get kxr_controller::AdjustAngleVectorGoal :md5sum-) "cf618411b2b5e77c4c269ff22a27ed58")
(setf (get kxr_controller::AdjustAngleVectorGoal :datatype-) "kxr_controller/AdjustAngleVectorGoal")
(setf (get kxr_controller::AdjustAngleVectorGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string[] joint_names
float32[] error_threshold

")



(provide :kxr_controller/AdjustAngleVectorGoal "cf618411b2b5e77c4c269ff22a27ed58")


